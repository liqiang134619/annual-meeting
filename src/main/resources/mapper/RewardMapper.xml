<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luopan.annualmeeting.dao.RewardDao">

  <resultMap id="BaseResultMap" type="com.luopan.annualmeeting.entity.Reward">
    <id property="id" column="ID" jdbcType="BIGINT"/>
    <result property="name" column="NAME" jdbcType="VARCHAR"/>
    <result property="level" column="LEVEL" jdbcType="INTEGER"/>
    <result property="amount" column="AMOUNT" jdbcType="INTEGER"/>
    <result property="imageUrl" column="IMAGE_URL" jdbcType="VARCHAR"/>
    <result property="createTime" column="CREATE_TIME" jdbcType="TIMESTAMP"/>
    <result property="updateTime" column="UPDATE_TIME" jdbcType="TIMESTAMP"/>
    <result property="status" column="STATUS" jdbcType="INTEGER"/>
  </resultMap>

  <sql id="BaseSql">
    ID, NAME, LEVEL, AMOUNT, IMAGE_URL
  </sql>

  <insert id="insert" parameterType="reward">
    INSERT INTO reward(NAME, LEVEL, AMOUNT, IMAGE_URL, company_id, CREATE_TIME, UPDATE_TIME, STATUS)
    VALUES (#{name}, #{level}, #{amount}, #{imageUrl}, #{companyId}, #{createTime}, #{updateTime}, #{status})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="reward">
    update reward
    <set>
      <if test="name != null">
        name = #{name},
      </if>
      <if test="level != null">
        level = #{level},
      </if>
      <if test="amount != null">
        amount = #{amount},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="status != null">
        status = #{status}
      </if>
    </set>
    where id = #{id} and status = 1
  </update>

  <select id="findAll" resultMap="BaseResultMap" parameterType="long">
    SELECT <include refid="BaseSql"/>
    FROM reward
    WHERE status = 1 and company_id = #{companyId}
    ORDER BY level
  </select>

  <select id="findById" resultMap="BaseResultMap" parameterType="long">
    SELECT <include refid="BaseSql"/>
    FROM reward
    WHERE id = #{id}
  </select>

  <select id="findNotLottery" resultMap="BaseResultMap" parameterType="long">
    select <include refid="BaseSql"/>
    from reward r
    where company_id = #{companyId} and not exists (
    select 1 from lottery l where r.id = l.reward_id
    )
  </select>

</mapper>